<?php

namespace api\common\models\iiko;

use api\modules\v1\modules\mobile\resources\Organization;
use Yii;
use yii\db\Expression;

/**
 * This is the model class for table "iiko_dic".
 *
 * @property integer $id
 * @property integer $org_id
 * @property integer $dictype_id
 * @property integer $dicstatus_id
 * @property string $created_at
 * @property string $updated_at
 * @property integer $obj_count
 * @property integer $obj_mapcount
 * @property string $comment
 */
class iikoDic extends \yii\db\ActiveRecord
{
    const STATUS_SUCCESS = 1;
    const STATUS_ERROR = 2;
    const STATUS_NOT_SYNC = 3;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'iiko_dic';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('db_api');
    }

    public function beforeSave($insert)
    {
        if($insert) {
            $this->created_at = Yii::$app->formatter->asDate(time(), 'yyyy-MM-dd HH:mm:ss');
        }

        $this->updated_at = Yii::$app->formatter->asDate(time(), 'yyyy-MM-dd HH:mm:ss');

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['org_id', 'dictype_id', 'dicstatus_id', 'obj_count', 'obj_mapcount'], 'integer'],
            [['created_at', 'updated_at'], 'safe'],
            [['comment'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'org_id' => Yii::t('app', 'Org ID'),
            'dictype_id' => Yii::t('app', 'Справочник'),
            'dicstatus_id' => Yii::t('app', 'Состояние'),
            'created_at' => Yii::t('app', 'Создано'),
            'updated_at' => Yii::t('app', 'Обновлено'),
            'obj_count' => Yii::t('app', 'Кол-во объектов'),
            'obj_mapcount' => Yii::t('app', 'Кол-во сопоставленных'),
            'comment' => Yii::t('app', 'Comment'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOrganization() {
        return $this->hasOne(Organization::className(), ['id' => 'org']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDictype() {
        return $this->hasOne(iikoDictype::className(), ['id' => 'dictype_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDicstatus() {
        return $this->hasOne(iikoDicstatus::className(), ['id' => 'dicstatus_id']);
    }

    /**
     * @return string
     */
    public function getOrganizationName() {
        return $this->organization ? $this->organization->name : 'no';
    }

    /**
     * @param $count
     * @return bool
     */
    public function updateSuccessSync($count) {
        $this->obj_count = $count;
        $this->dicstatus_id = iikoDic::STATUS_SUCCESS;
        if($this->save()) {
            return true;
        } else {
            return false;
        }
    }

    public static function errorSync($id) {
        $model = self::findOne($id);
        $model->dicstatus_id = iikoDic::STATUS_ERROR;
        $model->save();
    }
}
