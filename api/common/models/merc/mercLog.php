<?php

namespace api\common\models\merc;

use Yii;

/**
 * This is the model class for table "merc_log".
 *
 * @property int $id
 * @property string $localTransactionId
 * @property string $applicationId
 * @property int $user_id
 * @property int $organization_id
 * @property string $status
 * @property string $description
 * @property string $created_at
 * @property string $action;
 * @property string $request
 * @property string $response
 */
class mercLog extends \yii\db\ActiveRecord
{
    const ACCEPTED = 'ACCEPTED';
    const IN_PROCESS = 'IN_PROCESS';
    const COMPLETED = 'COMPLETED';
    const REJECTED = 'REJECTED';

    public $statuses = [
        self::ACCEPTED => 'Заявка принята',
        self::IN_PROCESS => 'Заявка обрабатывается',
        self::COMPLETED => 'Заявка успешно обработана',
        self::REJECTED => 'Заявка отклонена',
    ];

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'merc_log';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('db_api');
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'organization_id'], 'integer'],
            [['description'], 'string'],
            [['created_at', 'request', 'response'], 'safe'],
            [['localTransactionId'], 'string', 'max' => 100],
            [['applicationId','action'], 'string', 'max' => 255],
            [['status'], 'string', 'max' => 45],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'localTransactionId' => 'Local Transaction ID',
            'applicationId' => 'Application ID',
            'user_id' => 'User ID',
            'organization_id' => 'Organization ID',
            'status' => 'Status',
            'description' => 'Description',
            'created' => 'Created',
            'action' => 'Action',
            'request' => 'Request',
            'response' => 'Response',
        ];
    }

    public function beforeSave($insert)
    {
        if($this->isNewRecord)
        {
            $this->created_at = Yii::$app->formatter->asDate(time(), 'yyyy-MM-dd HH:mm:ss');
            $this->user_id = Yii::$app->user->id;
            $this->organization_id = (Yii::$app->user->identity)->organization_id;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
