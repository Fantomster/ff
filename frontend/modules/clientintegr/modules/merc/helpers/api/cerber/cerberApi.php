<?php

namespace frontend\modules\clientintegr\modules\merc\helpers\api\cerber;

use frontend\modules\clientintegr\modules\merc\helpers\api\baseApi;
use Yii;

class cerberApi extends baseApi
{

    public function init()
    {
        $load = new Cerber();
        $this->system = 'cerber';
        $this->wsdlClassName = Cerber::class;
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function getActivityLocationList()
    {
        $client = $this->getSoapClient('cerber');
        $request = new getActivityLocationListRequest();
        $request->businessEntity = new BusinessEntity();
        $request->businessEntity->guid = $this->issuerID;
        return $client->GetActivityLocationList($request);
    }

    public function getEnterpriseByUuid($UUID)
    {
        if ($UUID == null) {
            return null;
        }

        $enterprise = \common\models\vetis\VetisRussianEnterprise::findOne(['uuid' => $UUID, 'active' => true, 'last' => 'true']);

        if (empty($enterprise)) {
            $enterprise = \common\models\vetis\VetisForeignEnterprise::findOne(['uuid' => $UUID, 'active' => true, 'last' => 'true']);
        }

        if (!empty($enterprise)) {
            return $enterprise;
        }

        $client = $this->getSoapClient('cerber');

        $request = new getEnterpriseByUuidRequest();
        $request->uuid = $UUID;

        $result = $client->GetEnterpriseByUuid($request);

        return $result;
    }

    public function getBusinessEntityByUuid($UUID)
    {
        $business = \common\models\vetis\VetisBusinessEntity::findOne(['uuid' => $UUID, 'active' => true, 'last' => 'true']);

        if (!empty($business)) {
            return $business;
        }

        $client = $this->getSoapClient('cerber');
        $request = new getBusinessEntityByUuidRequest();
        $request->uuid = $UUID;

        $result = $client->GetBusinessEntityByUuid($request);

        return $result;
    }

    public function getEnterpriseByGuid($GUID)
    {
        if ($GUID == null) {
            return null;
        }

        $enterprise = \common\models\vetis\VetisRussianEnterprise::findOne(['guid' => $GUID, 'active' => true, 'last' => 'true']);

        if (empty($enterprise)) {
            $enterprise = \common\models\vetis\VetisForeignEnterprise::findOne(['guid' => $GUID, 'active' => true, 'last' => 'true']);
        }

        if (!empty($enterprise)) {
            return $enterprise;
        }

        $client = $this->getSoapClient('cerber');

        $request = new getEnterpriseByGuidRequest();
        $request->guid = $GUID;

        $result = $client->GetEnterpriseByGuid($request);

        return $result;
    }

    public function getBusinessEntityByGuid($GUID)
    {
        $business = \common\models\vetis\VetisBusinessEntity::findOne(['guid' => $GUID, 'active' => true, 'last' => 'true']);

        if (!empty($business)) {
            return $business;
        }

        $client = $this->getSoapClient('cerber');
        $request = new getBusinessEntityByGuidRequest();
        $request->guid = $GUID;

        $result = $client->GetBusinessEntityByGuid($request);

        return $result;
    }

    public function getForeignEnterpriseList($name, $country_guid)
    {
        $result = \common\models\vetis\VetisForeignEnterprise::find()->where(['country_guid' => $country_guid])->andWhere(['like', 'name', $name])->one();
        
        if (!empty($result)) {
            return $result;
        }
        
        $client = $this->getSoapClient('cerber');

        $request = new getForeignEnterpriseListRequest();
        $request->enterprise = new Enterprise();
        $request->enterprise->name = $name;
        $request->listOptions = new ListOptions();
        $request->listOptions->count = 10;
        $request->listOptions->offset = 0;
        $request->enterprise->address = new Address();
        $request->enterprise->address->country = new Country();
        $request->enterprise->address->country->guid = $country_guid;

        $result = $client->GetForeignEnterpriseList($request);

        return $result;
    }

    public function getRussianEnterpriseList($name)
    {
        $result = \common\models\vetis\VetisRussianEnterprise::find()->where(['like', 'name', $name])->one();
        
        if (!empty($result)) {
            return $result;
        }

        $client = $this->getSoapClient('cerber');

        $request = new getRussianEnterpriseListRequest();
        $request->enterprise = new Enterprise();
        $request->enterprise->name = $name;
        $request->listOptions = new ListOptions();
        $request->listOptions->count = 10;
        $request->listOptions->offset = 0;

        $result = $client->GetRussianEnterpriseList($request);

        return $result;
    }

}
